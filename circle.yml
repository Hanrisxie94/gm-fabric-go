machine:
    environment:
        IMPORT_PATH: "github.com/deciphernow/gm-fabric-go"
        REPO_NAME: "gm-fabric-go"
        GODIST: "go1.9.linux-amd64.tar.gz"
        PROTOCDIST: "protoc-3.3.0-linux-x86_64.zip"
        GOPATH: "/home/ubuntu/.go_workspace"
    pre:
        - curl -sSL https://s3.amazonaws.com/circle-downloads/install-circleci-docker.sh | bash -s -- 1.10.0
    services:
        - docker
    post:
        - mkdir -p download
        - test -e download/$GODIST || curl -o download/$GODIST https://storage.googleapis.com/golang/$GODIST
        - sudo rm -rf /usr/local/go
        - sudo tar -C /usr/local -xzf download/$GODIST
        - curl -OL https://github.com/google/protobuf/releases/download/v3.3.0/$PROTOCDIST
        - sudo rm -rf /usr/bin/protoc
        - sudo unzip $PROTOCDIST -d protoc3
        - sudo ln -s /home/ubuntu/protoc3/bin/protoc /usr/bin/protoc
        - which protoc
        - protoc --version

dependencies:
    pre:
        - sudo pip install docker-compose
        - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
        - sudo pip install docker-compose
        - sudo apt-get install -y pkg-config libssl1.0.0 libssl-dev libsasl2-dev
        - go get -u github.com/jteeuwen/go-bindata/...
        - go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
        - go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
        - go get -u github.com/golang/protobuf/protoc-gen-go
        - go get -u github.com/armon/go-metrics
        - go get -u github.com/dgrijalva/jwt-go
        - go get -u github.com/auth0/go-jwt-middleware
        - go get -u github.com/gorilla/mux
    override:
        - mkdir -p ~/.go_workspace/src/$IMPORT_PATH
        - rm -rf ~/.go_workspace/src/$IMPORT_PATH
        - cp -rf ~/$REPO_NAME ~/.go_workspace/src/$IMPORT_PATH
        - cd ~/.go_workspace/src/$IMPORT_PATH && go get ./...

test:
    override:
        - cd ~/.go_workspace/src/$IMPORT_PATH && GOPATH=~/.go_workspace go test $(go list ./... | grep -v '/vendor/')
